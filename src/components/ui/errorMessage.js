import { useMemo, useEffect, useState } from 'react';
import { useSelector } from 'react-redux';
import { motion, AnimatePresence } from "framer-motion";

export const ErrorMessage = () => {

    const { errorMessage } = useSelector( state => state.auth);

    const [show, setShow] = useState(false);

    useMemo(() => {
        if ( !!errorMessage && errorMessage !== 'not-error' ) setShow(true);
    },[errorMessage, setShow]);

    useEffect(() => {
        if ( show === true ) setTimeout(() => {
            setShow(false);
        }, 5000)
    });

    return (

        <AnimatePresence mode='wait'>
           {
                show &&
                <motion.section
                    className="popup_error-message"
                    initial={{ y:100 }}
                    animate={{ y:0 }}
                    exit={{ y:100 }}
                    whileHover={{
                        scale: 1.1,
                    }}
                    whileTap={{
                        scale: 1,
                    }}
                >
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path fillRule="evenodd" clipRule="evenodd" d="M16.3542 22.4303C14.968 23.0285 13.4869 23.3275 11.9108 23.3275C10.3443 23.3275 8.86792 23.0285 7.48175 22.4303C6.09558 21.8322 4.87318 21.0014 3.81455 19.9381C2.75594 18.8747 1.92519 17.6499 1.3223 16.2638C0.719413 14.8776 0.417969 13.4012 0.417969 11.8347C0.417969 10.2681 0.719413 8.79175 1.3223 7.40556C1.92519 6.01939 2.75357 4.79463 3.80743 3.73127C4.86132 2.6679 6.08134 1.83715 7.46751 1.23902C8.85368 0.640871 10.33 0.341797 11.8966 0.341797C13.4727 0.341797 14.9538 0.640871 16.3399 1.23902C17.7261 1.83715 18.9509 2.6679 20.0142 3.73127C21.0776 4.79463 21.9107 6.01939 22.5136 7.40556C23.1165 8.79175 23.418 10.2681 23.418 11.8347C23.418 13.4012 23.1165 14.8776 22.5136 16.2638C21.9107 17.6499 21.08 18.8747 20.0214 19.9381C18.9627 21.0014 17.7404 21.8322 16.3542 22.4303ZM10.8854 12.917C10.9044 13.6006 11.2462 13.9424 11.9108 13.9424C12.5659 13.9424 12.903 13.6006 12.922 12.917L13.0929 6.86439C13.1024 6.53209 12.9932 6.25437 12.7653 6.03125C12.5374 5.80815 12.2526 5.69659 11.9108 5.69659C11.5595 5.69659 11.2723 5.80577 11.0492 6.02413C10.8261 6.24251 10.7193 6.51785 10.7288 6.85013L10.8854 12.917ZM10.9638 17.4244C11.2344 17.676 11.5501 17.8018 11.9108 17.8018C12.2811 17.8018 12.6015 17.6784 12.8721 17.4315C13.1427 17.1847 13.278 16.8761 13.278 16.5059C13.278 16.1356 13.1427 15.8246 12.8721 15.5731C12.6015 15.3214 12.2811 15.1956 11.9108 15.1956C11.5501 15.1956 11.2344 15.3238 10.9638 15.5802C10.6932 15.8365 10.5579 16.1451 10.5579 16.5059C10.5579 16.8667 10.6932 17.1728 10.9638 17.4244Z" fill="none"/>
                    </svg>
                    <span>{ errorMessage }</span>
                </motion.section>
           }
        </AnimatePresence>
    )
}
